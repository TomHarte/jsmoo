"use strict";

const M68K_MN_LIST = Object.freeze([
    'ABCD',
    'ADD',
    'ADDA',
    'ADDI',
    'ADDQ',
    'ADDX',
    'AND',
    'ANDI',
    'ANDI_CCR',
    'ANDI_SR',
    'ASL',
    'ASR',
    'BCC',
    'BCHG',
    'BCLR',
    'BRA',
    'BSET',
    'BSR',
    'BTST',
    'CHK',
    'CLR',
    'CMP',
    'CMPA',
    'CMPI',
    'CMPM',
    'DBCC',
    'DIVS',
    'DIVU',
    'EOR',
    'EORI',
    'EORI_CCR',
    'EORI_SR',
    'EXG',
    'EXT',
    'ILLEGAL',
    'JMP',
    'JSR',
    'LEA',
    'LINK',
    'LSL',
    'LSR',
    'MOVE',
    'MOVEA',
    'MOVE_TO_CCR',
    'MOVE_FROM_CCR',
    'MOVE_SR',
    'MOVE_USP',
    'MOVEM',
    'MOVEP',
    'MOVEQ',
    'MULS',
    'MULU',
    'NBCD',
    'NEG',
    'NEGX',
    'NOP',
    'NOT',
    'OR',
    'ORI',
    'ORI_CCR',
    'ORI_SR',
    'PEA',
    'RESET',
    'ROL',
    'ROR',
    'ROXL',
    'ROXR',
    'RTE',
    'RTR',
    'RTS',
    'SBCD',
    'SCC',
    'STOP',
    'SUB',
    'SUBA',
    'SUBI',
    'SUBQ',
    'SUBX',
    'SWAP',
    'TAS',
    'TRAP',
    'TRAPV',
    'TST',
    'UNLK'
]);

/*
function m68k_mn_gen() {

    let outstr = 'const M68K_MN = Object.freeze({\n';
    let cnt = 0;
    for (let i in M68K_MN_LIST) {
        outstr += '    ' + M68K_MN_LIST[i] + ': ' + cnt + ',\n';
        cnt++;
    }
    return outstr + '});\n';
}
console.log(m68k_mn_gen());

 */

const M68K_MN = Object.freeze({
    ABCD: 0,
    ADD: 1,
    ADDA: 2,
    ADDI: 3,
    ADDQ: 4,
    ADDX: 5,
    AND: 6,
    ANDI: 7,
    ANDI_CCR: 8,
    ANDI_SR: 9,
    ASL: 10,
    ASR: 11,
    BCC: 12,
    BCHG: 13,
    BCLR: 14,
    BRA: 15,
    BSET: 16,
    BSR: 17,
    BTST: 18,
    CHK: 19,
    CLR: 20,
    CMP: 21,
    CMPA: 22,
    CMPI: 23,
    CMPM: 24,
    DBCC: 25,
    DIVS: 26,
    DIVU: 27,
    EOR: 28,
    EORI: 29,
    EORI_CCR: 30,
    EORI_SR: 31,
    EXG: 32,
    EXT: 33,
    ILLEGAL: 34,
    JMP: 35,
    JSR: 36,
    LEA: 37,
    LINK: 38,
    LSL: 39,
    LSR: 40,
    MOVE: 41,
    MOVEA: 42,
    MOVE_TO_CCR: 43,
    MOVE_FROM_CCR: 44,
    MOVE_SR: 45,
    MOVE_USP: 46,
    MOVEM: 47,
    MOVEP: 48,
    MOVEQ: 49,
    MULS: 50,
    MULU: 51,
    NBCD: 52,
    NEG: 53,
    NEGX: 54,
    NOP: 55,
    NOT: 56,
    OR: 57,
    ORI: 58,
    ORI_CCR: 59,
    ORI_SR: 60,
    PEA: 61,
    RESET: 62,
    ROL: 63,
    ROR: 64,
    ROXL: 65,
    ROXR: 66,
    RTE: 67,
    RTR: 68,
    RTS: 69,
    SBCD: 70,
    SCC: 71,
    STOP: 72,
    SUB: 73,
    SUBA: 74,
    SUBI: 75,
    SUBQ: 76,
    SUBX: 77,
    SWAP: 78,
    TAS: 79,
    TRAP: 80,
    TRAPV: 81,
    TST: 82,
    UNLK: 83,
});

// Register file
const M68K_RF = Object.freeze({
   R0: 0,
   R1: 1,
   R2: 2,
   R3: 3,
   R4: 4,
   R5: 5,
   R6: 6,
   R7: 7,
   A0: 8,
   A1: 9,
   A2: 10,
   A3: 11,
   A4: 12,
   A5: 13,
   A6: 14,
   A7: 15,
    PC: 16,
    SRL: 17, // 16-bit Status Register, low
    SRH: 18, // 16-bit Status Register, high
});

